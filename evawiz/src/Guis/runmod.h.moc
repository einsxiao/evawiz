/****************************************************************************
** Meta object code from reading C++ file 'runmod.h'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.5.1)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include "runmod.h"
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'runmod.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.5.1. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
struct qt_meta_stringdata_Runmod_t {
    QByteArrayData data[22];
    char stringdata0[195];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_Runmod_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_Runmod_t qt_meta_stringdata_Runmod = {
    {
QT_MOC_LITERAL(0, 0, 6), // "Runmod"
QT_MOC_LITERAL(1, 7, 4), // "load"
QT_MOC_LITERAL(2, 12, 0), // ""
QT_MOC_LITERAL(3, 13, 17), // "loadModuleDefault"
QT_MOC_LITERAL(4, 31, 4), // "save"
QT_MOC_LITERAL(5, 36, 3), // "run"
QT_MOC_LITERAL(6, 40, 8), // "runLocal"
QT_MOC_LITERAL(7, 49, 9), // "stopLocal"
QT_MOC_LITERAL(8, 59, 10), // "pauseLocal"
QT_MOC_LITERAL(9, 70, 11), // "resumeLocal"
QT_MOC_LITERAL(10, 82, 6), // "runPbs"
QT_MOC_LITERAL(11, 89, 4), // "quit"
QT_MOC_LITERAL(12, 94, 10), // "setDefault"
QT_MOC_LITERAL(13, 105, 1), // "i"
QT_MOC_LITERAL(14, 107, 11), // "setOriginal"
QT_MOC_LITERAL(15, 119, 8), // "logClear"
QT_MOC_LITERAL(16, 128, 12), // "logSelectAll"
QT_MOC_LITERAL(17, 141, 7), // "logCopy"
QT_MOC_LITERAL(18, 149, 10), // "dealOutput"
QT_MOC_LITERAL(19, 160, 9), // "dealError"
QT_MOC_LITERAL(20, 170, 12), // "appendOutput"
QT_MOC_LITERAL(21, 183, 11) // "appendError"

    },
    "Runmod\0load\0\0loadModuleDefault\0save\0"
    "run\0runLocal\0stopLocal\0pauseLocal\0"
    "resumeLocal\0runPbs\0quit\0setDefault\0i\0"
    "setOriginal\0logClear\0logSelectAll\0"
    "logCopy\0dealOutput\0dealError\0appendOutput\0"
    "appendError"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_Runmod[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      19,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  109,    2, 0x08 /* Private */,
       3,    0,  110,    2, 0x08 /* Private */,
       4,    0,  111,    2, 0x08 /* Private */,
       5,    0,  112,    2, 0x08 /* Private */,
       6,    0,  113,    2, 0x08 /* Private */,
       7,    0,  114,    2, 0x08 /* Private */,
       8,    0,  115,    2, 0x08 /* Private */,
       9,    0,  116,    2, 0x08 /* Private */,
      10,    0,  117,    2, 0x08 /* Private */,
      11,    0,  118,    2, 0x08 /* Private */,
      12,    1,  119,    2, 0x08 /* Private */,
      14,    1,  122,    2, 0x08 /* Private */,
      15,    0,  125,    2, 0x08 /* Private */,
      16,    0,  126,    2, 0x08 /* Private */,
      17,    0,  127,    2, 0x08 /* Private */,
      18,    0,  128,    2, 0x08 /* Private */,
      19,    0,  129,    2, 0x08 /* Private */,
      20,    1,  130,    2, 0x08 /* Private */,
      21,    1,  133,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void, QMetaType::Int,   13,
    QMetaType::Void, QMetaType::Int,   13,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void, QMetaType::QString,    2,
    QMetaType::Void, QMetaType::QString,    2,

       0        // eod
};

void Runmod::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        Runmod *_t = static_cast<Runmod *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->load(); break;
        case 1: _t->loadModuleDefault(); break;
        case 2: _t->save(); break;
        case 3: _t->run(); break;
        case 4: _t->runLocal(); break;
        case 5: _t->stopLocal(); break;
        case 6: _t->pauseLocal(); break;
        case 7: _t->resumeLocal(); break;
        case 8: _t->runPbs(); break;
        case 9: _t->quit(); break;
        case 10: _t->setDefault((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 11: _t->setOriginal((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 12: _t->logClear(); break;
        case 13: _t->logSelectAll(); break;
        case 14: _t->logCopy(); break;
        case 15: _t->dealOutput(); break;
        case 16: _t->dealError(); break;
        case 17: _t->appendOutput((*reinterpret_cast< QString(*)>(_a[1]))); break;
        case 18: _t->appendError((*reinterpret_cast< QString(*)>(_a[1]))); break;
        default: ;
        }
    }
}

const QMetaObject Runmod::staticMetaObject = {
    { &QMainWindow::staticMetaObject, qt_meta_stringdata_Runmod.data,
      qt_meta_data_Runmod,  qt_static_metacall, Q_NULLPTR, Q_NULLPTR}
};


const QMetaObject *Runmod::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *Runmod::qt_metacast(const char *_clname)
{
    if (!_clname) return Q_NULLPTR;
    if (!strcmp(_clname, qt_meta_stringdata_Runmod.stringdata0))
        return static_cast<void*>(const_cast< Runmod*>(this));
    return QMainWindow::qt_metacast(_clname);
}

int Runmod::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QMainWindow::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 19)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 19;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 19)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 19;
    }
    return _id;
}
QT_END_MOC_NAMESPACE
